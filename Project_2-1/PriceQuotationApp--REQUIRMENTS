Project 2-1: Build the Price Quotation app
For this project, you will build a single-page app like the one that’s shown below.
Specifications
1. When the app starts, it should display the Price Quotation page with no subtotal or discount percent,
and it should set the discount amount and total to $0.00.
2. If the user enters a valid subtotal and discount percent and clicks the Calculate button, the app
should calculate and display the discount amount and total.
3. If the user enters invalid data and clicks the Calculate button, the app should display a summary of
validation errors above the form.
4. Here are the requirements for valid data:
a. The sales price is required and must be a valid number that’s greater than 0.
b. The discount percent is required and must be a valid number from 0 to 100.
5. If the user clicks the Clear link, the app should reset the form to how it was when the app first
started.
6. Use the MVC pattern. To do that, create a model class that stores the subtotal and discount percent
and calculates the discount amount and total. Make sure to bind that model to the Razor view that
displays the Price Quotation page shown above.
7. Use a Razor layout to store the <html>, <head>, and <body> elements.
8. Use a custom CSS style sheet to style the HTML elements so they appear as shown above.
Project 2-2: Build the Tip Calculator app
For this project, you will build a single-page app like the one shown below.
Specifications
1. When the app starts, it should display an empty text box and tip amounts of $0.00.
2. If the user enters a valid meal cost and clicks the Calculate button, the app should calculate and
display the tip amounts as shown above.
3. If the user enters invalid data and clicks the Calculate button, the app should display a summary of
validation errors above the form and $0.00 for the tip amounts.
4. The cost of the meal is required and must be a valid number that’s greater than 0.
5. If the user clicks the Clear link, the app should reset the page to how it was when the app first
started.
6. Use the MVC pattern. To do that, create a model class that stores the cost of the meal and includes a
helper method for calculating the tip percentages.
7. Use a Razor layout to store the <html>, <head>, and <body> elements.
8. Use a custom CSS style sheet to style the HTML elements so they appear as shown ab
